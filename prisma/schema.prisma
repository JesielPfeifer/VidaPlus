generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model paciente {
  id          String   @id @default(uuid())
  nome        String
  cpf         String   @unique
  email       String   @unique
  telefone    String
  dataNascimento DateTime
  genero      String
  unidadeId   String
  unidade     unidade  @relation(fields: [unidadeId], references: [id])
  consultas   consulta[]
  prontuarios prontuario[]
  internacoes internacao[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Agenda agenda[]
}

model profissional {
  id             String   @id @default(uuid())
  nome           String
  crm            String?   @unique
  coren          String?   @unique
  cargo          String
  especialidade  String?
  unidadeId      String
  unidade        unidade  @relation(fields: [unidadeId], references: [id])
  consultas      consulta[]
  agendas        agenda[]
  prontuarios    prontuario[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model agenda {
  id             String    @id @default(uuid())
  dataHora       DateTime
  tipo           String    // Ex: "Consulta", "Exame", "Telemedicina"
  status         String    // Ex: "Agendado", "Cancelado", "Conclu√≠do"
  pacienteId     String
  profissionalId String
  paciente       paciente  @relation(fields: [pacienteId], references: [id])
  profissional   profissional @relation(fields: [profissionalId], references: [id])
}

model consulta {
  id             String     @id @default(uuid())
  pacienteId     String
  profissionalId String
  unidadeId      String
  data           DateTime
  tipo           String
  status         String
  observacoes    String?
  telemedicina   telemedicina?
  prontuario     prontuario?

  paciente       paciente     @relation(fields: [pacienteId], references: [id])
  profissional   profissional @relation(fields: [profissionalId], references: [id])
  unidade        unidade      @relation(fields: [unidadeId], references: [id])
}

model telemedicina {
  id          String   @id @default(uuid())
  consultaId  String   @unique
  linkVideo   String
  tokenAcesso String
  consulta    consulta @relation(fields: [consultaId], references: [id])
}

model prontuario {
  id             String       @id @default(uuid())
  consultaId     String       @unique
  pacienteId     String
  profissionalId String
  descricao      String
  prescricoes    prescricao[]

  consulta       consulta     @relation(fields: [consultaId], references: [id])
  paciente       paciente     @relation(fields: [pacienteId], references: [id])
  profissional   profissional @relation(fields: [profissionalId], references: [id])
}

model prescricao {
  id            String   @id @default(uuid())
  prontuarioId  String
  medicamento   String
  dosagem       String
  observacoes   String?

  prontuario    prontuario @relation(fields: [prontuarioId], references: [id])
}

model unidade {
  id           String        @id @default(uuid())
  nome         String        @unique
  endereco     String
  pacientes    paciente[]
  profissionais profissional[]
  consultas    consulta[]
  internacoes  internacao[]
}

model internacao {
  id          String   @id @default(uuid())
  pacienteId  String
  unidadeId   String
  leito       String
  dataEntrada DateTime
  dataSaida   DateTime?
  status      String

  paciente    paciente @relation(fields: [pacienteId], references: [id])
  unidade     unidade  @relation(fields: [unidadeId], references: [id])
}

model usuario_admin {
  id      String  @id @default(uuid())
  nome    String
  email   String  @unique
  senha   String
  perfil  String  // Ex: "Administrador", "Profissional", "Paciente"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
